name: Automated Commit

on:
  push:
    branches: [master]
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  auto_commit_matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
      max-parallel: 100
    steps:
      - name: Random Delay to Avoid Collision
        run: sleep $((RANDOM % 30 + 1))
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
      - name: Setup Git Configuration
        run: |
          git config user.email "${{ github.repository_owner }}@users.noreply.github.com"
          git config user.name "${{ github.repository_owner }}"
      - name: Update Timestamp File and Set Output
        id: timestamp_update
        run: |
          instance=${{ matrix.instance }}
          today=$(date '+%Y-%m-%d')
          now=$(date '+%Y-%m-%d %H:%M:%S')
          MAX_COMMITS_PER_DAY=100000
          count_file="DAILY_COMMIT_COUNT${instance}.txt"
          ts_file="TIMESTAMP${instance}.txt"
          if [ -f "$count_file" ]; then
            read -r last_count last_date < "$count_file"
            if [ "$last_date" == "$today" ]; then
              current_day_count=$last_count
            else
              current_day_count=0
            fi
          else
            current_day_count=0
          fi
          if [ "$current_day_count" -ge "$MAX_COMMITS_PER_DAY" ]; then
            echo "commit_skipped=true" >> $GITHUB_OUTPUT
            exit 0
          else
            new_day_count=$((current_day_count + 1))
            echo "$new_day_count $today" > "$count_file"
            echo "Updated on $now (Daily Commit #$new_day_count)" > "$ts_file"
            echo "commit_time=$now" >> $GITHUB_OUTPUT
            echo "commit_count=$new_day_count" >> $GITHUB_OUTPUT
            echo "commit_skipped=false" >> $GITHUB_OUTPUT
            echo "count_file=$count_file" >> $GITHUB_OUTPUT
            echo "ts_file=$ts_file" >> $GITHUB_OUTPUT
          fi
      - name: Commit and Rebase Push
        if: steps.timestamp_update.outputs.commit_skipped == 'false'
        run: |
          count_file="${{ steps.timestamp_update.outputs.count_file }}"
          ts_file="${{ steps.timestamp_update.outputs.ts_file }}"
          commit_messages=("Update: ⏰" "Refresh: 🔄" "Renew: 🌟" "Revise: 📝" "Amend: 🛠" "Adjust: 🔧" "Change: 📈" "Modify: 🖊" "Transform: 🌀" "Revamp: 🌈")
          msg=${commit_messages[$RANDOM % ${#commit_messages[@]}]}
          git add "$count_file" "$ts_file"
          git commit -m "$msg - Daily Commit #${{ steps.timestamp_update.outputs.commit_count }} at ${{ steps.timestamp_update.outputs.commit_time }}" || exit 0
          for attempt in {1..3}; do
            git pull origin master --rebase && git push origin master && break
            sleep $((RANDOM % 5 + 1))
          done
